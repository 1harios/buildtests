export function toReactNode(jsx_) {
    const jsx = jsx_;
    if (!jsx)
        return null;
    if (Array.isArray(jsx))
        return jsx.map((child) => toReactNode(child));
    if (typeof jsx === "string")
        return jsx;
    if (typeof jsx === "number")
        return jsx;
    if (typeof jsx.tag === "function") {
        const node = jsx.tag({ ...jsx.props, children: jsx.children });
        if (!node.tag)
            return toReactNode(jsx.children); // fragment
        return toReactNode(node); // component
    }
    const { tag, props } = jsx;
    const children = jsx.children?.map((child) => toReactNode(child));
    return {
        type: tag,
        key: null,
        props: {
            ...props,
            children: children.length === 1 ? children[0] : children,
        },
    };
}
//# sourceMappingURL=toReactNode.js.map