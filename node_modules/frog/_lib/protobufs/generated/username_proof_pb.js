// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file username_proof.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
/**
 * @generated from enum UserNameType
 */
export var UserNameType;
(function (UserNameType) {
    /**
     * @generated from enum value: USERNAME_TYPE_NONE = 0;
     */
    UserNameType[UserNameType["USERNAME_TYPE_NONE"] = 0] = "USERNAME_TYPE_NONE";
    /**
     * @generated from enum value: USERNAME_TYPE_FNAME = 1;
     */
    UserNameType[UserNameType["USERNAME_TYPE_FNAME"] = 1] = "USERNAME_TYPE_FNAME";
    /**
     * @generated from enum value: USERNAME_TYPE_ENS_L1 = 2;
     */
    UserNameType[UserNameType["USERNAME_TYPE_ENS_L1"] = 2] = "USERNAME_TYPE_ENS_L1";
})(UserNameType || (UserNameType = {}));
// Retrieve enum metadata with: proto3.getEnumType(UserNameType)
proto3.util.setEnumType(UserNameType, "UserNameType", [
    { no: 0, name: "USERNAME_TYPE_NONE" },
    { no: 1, name: "USERNAME_TYPE_FNAME" },
    { no: 2, name: "USERNAME_TYPE_ENS_L1" },
]);
/**
 * @generated from message UserNameProof
 */
export class UserNameProof extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint64 timestamp = 1;
         */
        Object.defineProperty(this, "timestamp", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: protoInt64.zero
        });
        /**
         * @generated from field: bytes name = 2;
         */
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * @generated from field: bytes owner = 3;
         */
        Object.defineProperty(this, "owner", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * @generated from field: bytes signature = 4;
         */
        Object.defineProperty(this, "signature", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Uint8Array(0)
        });
        /**
         * @generated from field: uint64 fid = 5;
         */
        Object.defineProperty(this, "fid", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: protoInt64.zero
        });
        /**
         * @generated from field: UserNameType type = 6;
         */
        Object.defineProperty(this, "type", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: UserNameType.USERNAME_TYPE_NONE
        });
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new UserNameProof().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new UserNameProof().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new UserNameProof().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(UserNameProof, a, b);
    }
}
Object.defineProperty(UserNameProof, "runtime", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3
});
Object.defineProperty(UserNameProof, "typeName", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: "UserNameProof"
});
Object.defineProperty(UserNameProof, "fields", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: proto3.util.newFieldList(() => [
        { no: 1, name: "timestamp", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 2, name: "name", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 3, name: "owner", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 4, name: "signature", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
        { no: 5, name: "fid", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
        { no: 6, name: "type", kind: "enum", T: proto3.getEnumType(UserNameType) },
    ])
});
//# sourceMappingURL=username_proof_pb.js.map