import type { serveStatic as n_serveStatic } from '@hono/node-server/serve-static';
import { Hono, type Schema } from 'hono';
import type { serveStatic as b_serveStatic } from 'hono/bun';
import type { serveStatic as c_serveStatic } from 'hono/cloudflare-workers';
import type { FrogBase } from '../frog-base.js';
import type { Env } from '../types/env.js';
import type { Hub } from '../types/hub.js';
import type { Pretty } from '../types/utils.js';
import { type ApiRoutesOptions, type RouteData } from './api.js';
export type ServeStatic = typeof n_serveStatic | typeof c_serveStatic | typeof b_serveStatic;
export type DevtoolsOptions<serveStatic extends ServeStatic = ServeStatic> = RoutesOptions<serveStatic>;
export declare function devtools<env extends Env, schema extends Schema, basePath extends string, serveStatic extends ServeStatic, state = env['State']>(frog: FrogBase<env, schema, basePath, state>, options?: (DevtoolsOptions<serveStatic> & {
    root?: string | undefined;
}) | undefined): void;
type RoutesOptions<serveStatic extends ServeStatic = ServeStatic> = Pretty<Pretty<ApiRoutesOptions> & {
    /**
     * The base path for devtools assets.
     */
    assetsPath?: string;
    /**
     * The base path for the devtools instance off the Frog instances `basePath`.
     *
     * @default '/dev'
     */
    basePath?: string | undefined;
    /**
     * Platform-dependent function to serve devtools' static files.
     *
     * @example
     * import { serveStatic } from 'frog/serve-static'
     * import { serveStatic } from 'hono/bun'
     * import { serveStatic } from 'hono/cloudflare-workers'
     * import { serveStatic } from '@hono/node-server/serve-static'
     */
    serveStatic?: serveStatic | ServeStatic | undefined;
    /**
     * Parameters to pass to the {@link serveStatic} function.
     */
    serveStaticOptions?: Parameters<serveStatic>[0] | undefined;
}>;
export declare function routes(options: RoutesOptions & {
    basePath: string;
    hub: Hub | undefined;
    publicPath: string;
    root: string | undefined;
    routes: RouteData[];
    secret: string | undefined;
}): Hono<import("hono/types").BlankEnv, import("hono/types").BlankSchema, "/">;
export {};
//# sourceMappingURL=devtools.d.ts.map