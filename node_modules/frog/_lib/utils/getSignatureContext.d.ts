import type { HonoRequest, Input } from 'hono';
import type { Context, SignatureContext } from '../types/context.js';
import type { Env } from '../types/env.js';
type GetSignatureContextParameters<env extends Env = Env, path extends string = string, input extends Input = {}, _state = env['State']> = {
    context: Context<env, path, input, _state>;
    req: HonoRequest;
};
type GetSignatureContextReturnType<env extends Env = Env, path extends string = string, input extends Input = {}, _state = env['State']> = {
    context: SignatureContext<env, path, input, _state>;
};
export declare function getSignatureContext<env extends Env, path extends string, input extends Input, _state = env['State']>(parameters: GetSignatureContextParameters<env, path, input, _state>): GetSignatureContextReturnType<env, path, input, _state>;
export {};
//# sourceMappingURL=getSignatureContext.d.ts.map