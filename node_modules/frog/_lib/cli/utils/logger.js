import colors from 'picocolors';
export function printServerUrls(urls, options, info) {
    const colorUrl = (url) => colors.cyan(url.replace(/:(\d+)\//, (_, port) => `:${colors.bold(port)}/`));
    for (const url of urls.local) {
        info(`  ${colors.green('➜')}  ${colors.bold('Local')}:   ${colorUrl(url)}`);
    }
    for (const url of urls.network) {
        info(`  ${colors.green('➜')}  ${colors.bold('Network')}: ${colorUrl(url)}`);
    }
    for (const url of urls.dev) {
        info(`  ${colors.green('➜')}  ${colors.bold('Inspect')}: ${colorUrl(url)}`);
    }
    if (urls.dev.length === 0 && options.dev === undefined)
        info(colors.dim(`  ${colors.green('➜')}  ${colors.bold('Inspect')}: add `) +
            colors.bold('devtools') +
            colors.dim(' to app'));
    if (urls.network.length === 0 && options.host === undefined)
        info(colors.dim(`  ${colors.green('➜')}  ${colors.bold('Network')}: use `) +
            colors.bold('--host') +
            colors.dim(' to expose'));
}
//# sourceMappingURL=logger.js.map