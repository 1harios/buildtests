import type { JSX } from 'hono/jsx/jsx-runtime';
import type { HtmlEscapedString } from 'hono/utils/html';
export declare const buttonPrefix: {
    addCastAction: string;
    link: string;
    mint: string;
    redirect: string;
    reset: string;
    transaction: string;
    signature: string;
};
export type ButtonProps = {
    children: string | string[];
};
export type ButtonRootProps = ButtonProps & {
    action?: string | undefined;
    value?: string | undefined;
};
export declare function ButtonRoot({ action, children, index, value, }: ButtonRootProps): JSX.Element;
export declare namespace ButtonRoot {
    var __type: string;
}
export type ButtonAddCastActionProps = ButtonProps & {
    /** Action path */
    action: string;
};
export declare function ButtonAddCastAction({ action, children, index, }: ButtonAddCastActionProps): HtmlEscapedString;
export declare namespace ButtonAddCastAction {
    var __type: string;
}
export type ButtonLinkProps = ButtonProps & {
    href: string;
};
export declare function ButtonLink({ children, index, href, }: ButtonLinkProps): JSX.Element;
export declare namespace ButtonLink {
    var __type: string;
}
export type ButtonMintProps = ButtonProps & {
    target: string;
};
export declare function ButtonMint({ children, index, target, }: ButtonMintProps): JSX.Element;
export declare namespace ButtonMint {
    var __type: string;
}
export type ButtonRedirectProps = ButtonProps & {
    location: string;
};
export declare function ButtonRedirect({ children, index, location, }: ButtonRedirectProps): JSX.Element;
export declare namespace ButtonRedirect {
    var __type: string;
}
export type ButtonResetProps = ButtonProps;
export declare function ButtonReset({ children, index, }: ButtonResetProps): JSX.Element;
export declare namespace ButtonReset {
    var __type: string;
}
export type ButtonTransactionProps = ButtonProps & {
    action?: string | undefined;
    target: string;
};
export declare function ButtonTransaction({ action, children, index, target, }: ButtonTransactionProps): JSX.Element;
export declare namespace ButtonTransaction {
    var __type: string;
}
export type ButtonSignatureProps = ButtonProps & {
    action?: string | undefined;
    target: string;
};
export declare function ButtonSignature({ action, children, index, target, }: ButtonSignatureProps): JSX.Element;
export declare namespace ButtonSignature {
    var __type: string;
}
export declare const Button: typeof ButtonRoot & {
    AddCastAction: typeof ButtonAddCastAction;
    Link: typeof ButtonLink;
    Mint: typeof ButtonMint;
    Redirect: typeof ButtonRedirect;
    Reset: typeof ButtonReset;
    Transaction: typeof ButtonTransaction;
    Signature: typeof ButtonSignature;
};
//# sourceMappingURL=Button.d.ts.map